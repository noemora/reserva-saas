-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.bookings (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  client_id uuid NOT NULL,
  professional_id uuid NOT NULL,
  service_id uuid NOT NULL,
  workplace_id uuid NOT NULL,
  company_id uuid,
  booking_date date NOT NULL,
  booking_time time without time zone NOT NULL,
  duration integer NOT NULL,
  price numeric NOT NULL,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'confirmed'::text, 'completed'::text, 'cancelled'::text, 'no_show'::text])),
  notes text,
  cancellation_reason text,
  payment_status text DEFAULT 'pending'::text CHECK (payment_status = ANY (ARRAY['pending'::text, 'paid'::text, 'refunded'::text])),
  payment_method text,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  instructions text,
  description text,
  CONSTRAINT bookings_pkey PRIMARY KEY (id),
  CONSTRAINT bookings_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.clients(id),
  CONSTRAINT bookings_professional_id_fkey FOREIGN KEY (professional_id) REFERENCES public.professionals(id),
  CONSTRAINT bookings_service_id_fkey FOREIGN KEY (service_id) REFERENCES public.services(id),
  CONSTRAINT bookings_workplace_id_fkey FOREIGN KEY (workplace_id) REFERENCES public.workplaces(id),
  CONSTRAINT bookings_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.clients (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL UNIQUE,
  date_of_birth date,
  address text,
  emergency_contact jsonb,
  medical_history ARRAY DEFAULT '{}'::text[],
  allergies ARRAY DEFAULT '{}'::text[],
  current_medications ARRAY DEFAULT '{}'::text[],
  insurance_provider text,
  insurance_number text,
  preferred_language text DEFAULT 'EspaÃ±ol'::text,
  communication_preferences jsonb DEFAULT '{"sms": true, "email": true, "phone": false}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT clients_pkey PRIMARY KEY (id),
  CONSTRAINT clients_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.companies (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL UNIQUE,
  address text,
  website text,
  capacity integer DEFAULT 0,
  founded_year integer,
  description text,
  services ARRAY DEFAULT '{}'::text[],
  logo_url text,
  rating numeric DEFAULT 0.00,
  total_bookings integer DEFAULT 0,
  monthly_revenue numeric DEFAULT 0.00,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT companies_pkey PRIMARY KEY (id),
  CONSTRAINT companies_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.company_schedules (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id uuid NOT NULL,
  day_of_week text NOT NULL CHECK (day_of_week = ANY (ARRAY['monday'::text, 'tuesday'::text, 'wednesday'::text, 'thursday'::text, 'friday'::text, 'saturday'::text, 'sunday'::text])),
  is_open boolean DEFAULT false,
  open_time time without time zone,
  close_time time without time zone,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT company_schedules_pkey PRIMARY KEY (id),
  CONSTRAINT company_schedules_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.notifications (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  title text NOT NULL,
  message text NOT NULL,
  type text NOT NULL CHECK (type = ANY (ARRAY['booking'::text, 'reminder'::text, 'cancellation'::text, 'payment'::text, 'review'::text, 'system'::text])),
  is_read boolean DEFAULT false,
  related_booking_id uuid,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT notifications_pkey PRIMARY KEY (id),
  CONSTRAINT notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT notifications_related_booking_id_fkey FOREIGN KEY (related_booking_id) REFERENCES public.bookings(id)
);
CREATE TABLE public.professional_workplaces (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  professional_id uuid NOT NULL,
  workplace_id uuid NOT NULL,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT professional_workplaces_pkey PRIMARY KEY (id),
  CONSTRAINT professional_workplaces_professional_id_fkey FOREIGN KEY (professional_id) REFERENCES public.professionals(id),
  CONSTRAINT professional_workplaces_workplace_id_fkey FOREIGN KEY (workplace_id) REFERENCES public.workplaces(id)
);
CREATE TABLE public.professionals (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL UNIQUE,
  company_id uuid,
  title text,
  license_number text,
  experience integer DEFAULT 0,
  education text,
  specialties ARRAY DEFAULT '{}'::text[],
  biography text,
  rating numeric DEFAULT 0.00,
  total_bookings integer DEFAULT 0,
  monthly_revenue numeric DEFAULT 0.00,
  is_active boolean DEFAULT true,
  member_since timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT professionals_pkey PRIMARY KEY (id),
  CONSTRAINT professionals_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT professionals_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  email text NOT NULL,
  full_name text,
  phone text,
  user_type text DEFAULT 'Cliente'::text CHECK (user_type = ANY (ARRAY['Cliente'::text, 'Profesional'::text, 'Empresa'::text])),
  avatar_url text,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.reviews (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  booking_id uuid NOT NULL UNIQUE,
  client_id uuid NOT NULL,
  professional_id uuid NOT NULL,
  rating integer NOT NULL CHECK (rating >= 1 AND rating <= 5),
  comment text,
  is_anonymous boolean DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT reviews_pkey PRIMARY KEY (id),
  CONSTRAINT reviews_booking_id_fkey FOREIGN KEY (booking_id) REFERENCES public.bookings(id),
  CONSTRAINT reviews_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.clients(id),
  CONSTRAINT reviews_professional_id_fkey FOREIGN KEY (professional_id) REFERENCES public.professionals(id)
);
CREATE TABLE public.service_schedules (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  service_id uuid NOT NULL,
  day_of_week text NOT NULL CHECK (day_of_week = ANY (ARRAY['monday'::text, 'tuesday'::text, 'wednesday'::text, 'thursday'::text, 'friday'::text, 'saturday'::text, 'sunday'::text])),
  is_available boolean DEFAULT false,
  start_time time without time zone,
  end_time time without time zone,
  break_start time without time zone,
  break_end time without time zone,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT service_schedules_pkey PRIMARY KEY (id),
  CONSTRAINT service_schedules_service_id_fkey FOREIGN KEY (service_id) REFERENCES public.services(id)
);
CREATE TABLE public.services (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  professional_id uuid NOT NULL,
  workplace_id uuid NOT NULL,
  name text NOT NULL,
  description text,
  duration integer NOT NULL,
  price numeric NOT NULL,
  category text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  schedule jsonb DEFAULT '{}'::jsonb,
  tags ARRAY DEFAULT '{}'::text[],
  requirements text,
  preparation_time integer DEFAULT 0,
  cleanup_time integer DEFAULT 0,
  max_bookings_per_day integer DEFAULT 20,
  booking_window_days integer DEFAULT 30,
  image_url text,
  color text DEFAULT '#3B82F6'::text,
  CONSTRAINT services_pkey PRIMARY KEY (id),
  CONSTRAINT services_professional_id_fkey FOREIGN KEY (professional_id) REFERENCES public.professionals(id),
  CONSTRAINT services_workplace_id_fkey FOREIGN KEY (workplace_id) REFERENCES public.workplaces(id)
);
CREATE TABLE public.workplaces (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  company_id uuid,
  name text NOT NULL,
  address text NOT NULL,
  description text,
  phone text,
  email text,
  services ARRAY DEFAULT '{}'::text[],
  is_active boolean DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT workplaces_pkey PRIMARY KEY (id),
  CONSTRAINT workplaces_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);